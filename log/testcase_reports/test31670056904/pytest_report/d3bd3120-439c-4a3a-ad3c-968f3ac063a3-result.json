{"name": "qq号查运气", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == 0\n +  where 0 = <built-in method get of dict object at 0x03EC8300>('error_code')\n +    where <built-in method get of dict object at 0x03EC8300> = {'error_code': 0, 'reason': 'success', 'result': {'data': {'analysis': '主人性格类型：[不善表达/疑心大型]，其具体表现为：在乎身边各人对自己的评价及观感，不善表达个人情感，是个先考虑别人感受，再作出相应配合的内敛一族。对于爱侣，经常存有怀疑之心。', 'conclusion': '万宝集门，天降幸运，立志奋发，得成大功'}}}.get\n +      where {'error_code': 0, 'reason': 'success', 'result': {'data': {'analysis': '主人性格类型：[不善表达/疑心大型]，其具体表现为：在乎身边各人对自己的评价及观感，不善表达个人情感，是个先考虑别人感受，再作出相应配合的内敛一族。对于爱侣，经常存有怀疑之心。', 'conclusion': '万宝集门，天降幸运，立志奋发，得成大功'}}} = <bound method Response.json of <Response [200]>>()\n +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json", "trace": "@allure.title('qq号查运气')\n    def test_0():\n        allure.attach('''\n    url:'http://japi.juhe.cn/qqevaluate/qq?qq=1450676007&key=639519cf884578de8e6dce821f4c4175'\n    headers:\n    \n    body:\n    \n                    ''','请求信息')\n        res=requests.request('GET','http://japi.juhe.cn/qqevaluate/qq?qq=1450676007&key=639519cf884578de8e6dce821f4c4175',headers=None,data='',verify=False)\n        print(res.json())\n        allure.attach(json.dumps(res.json(),indent=2,ensure_ascii=False),'响应信息')\n>       assert '' == res.json().get('error_code')\nE       AssertionError: assert '' == 0\nE        +  where 0 = <built-in method get of dict object at 0x03EC8300>('error_code')\nE        +    where <built-in method get of dict object at 0x03EC8300> = {'error_code': 0, 'reason': 'success', 'result': {'data': {'analysis': '主人性格类型：[不善表达/疑心大型]，其具体表现为：在乎身边各人对自己的评价及观感，不善表达个人情感，是个先考虑别人感受，再作出相应配合的内敛一族。对于爱侣，经常存有怀疑之心。', 'conclusion': '万宝集门，天降幸运，立志奋发，得成大功'}}}.get\nE        +      where {'error_code': 0, 'reason': 'success', 'result': {'data': {'analysis': '主人性格类型：[不善表达/疑心大型]，其具体表现为：在乎身边各人对自己的评价及观感，不善表达个人情感，是个先考虑别人感受，再作出相应配合的内敛一族。对于爱侣，经常存有怀疑之心。', 'conclusion': '万宝集门，天降幸运，立志奋发，得成大功'}}} = <bound method Response.json of <Response [200]>>()\nE        +        where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n\nlog\\testcase_reports\\test31670056904\\temp_test.py:15: AssertionError"}, "attachments": [{"name": "请求信息", "source": "68fefae5-836d-49d1-ab7b-39a53f274b35-attachment.attach"}, {"name": "响应信息", "source": "386c7af1-3a9d-4a1e-a8db-8cad7d71d7a5-attachment.attach"}, {"name": "stdout", "source": "d9abd3d9-4873-412f-a8ff-49b1785b70c6-attachment.txt", "type": "text/plain"}], "start": 1670056907363, "stop": 1670056907942, "uuid": "15a10771-d04d-4cd8-a346-1f5a472ed643", "historyId": "818e137b0a9285e58d5c959ac5791909", "testCaseId": "d0ef13d5bccf54e64be32c3d838301c7", "fullName": "log.testcase_reports.test31670056904.temp_test#test_0", "labels": [{"name": "parentSuite", "value": "log.testcase_reports.test31670056904"}, {"name": "suite", "value": "temp_test"}, {"name": "host", "value": "hanfengju"}, {"name": "thread", "value": "11920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "log.testcase_reports.test31670056904.temp_test"}]}